// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RendicionGastos.DataAccess;

#nullable disable

namespace RendicionGastos.DataAccess.Migrations
{
    [DbContext(typeof(RendicionGastosDbContext))]
    partial class RendicionGastosDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RendicionGastos.Entities.CentroCosto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EliminadoBD")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuarioActualizacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("CentroCosto");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Descripcion = "Produccion",
                            EliminadoBD = false,
                            FechaCreacion = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioCreacion = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Descripcion = "Administracion",
                            EliminadoBD = false,
                            FechaCreacion = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioCreacion = "admin"
                        },
                        new
                        {
                            Id = 3,
                            Descripcion = "Ventas",
                            EliminadoBD = false,
                            FechaCreacion = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioCreacion = "admin"
                        },
                        new
                        {
                            Id = 4,
                            Descripcion = "Finanzas",
                            EliminadoBD = false,
                            FechaCreacion = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsuarioCreacion = "admin"
                        });
                });

            modelBuilder.Entity("RendicionGastos.Entities.Concepto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EliminadoBD")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsuarioActualizacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Concepto");
                });

            modelBuilder.Entity("RendicionGastos.Entities.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ApellidoMaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("EliminadoBD")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("FechaIngreso")
                        .HasColumnType("date");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NroDNI")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Salario")
                        .HasColumnType("real");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioActualizacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("NroDNI");

                    b.ToTable("Empleado");
                });

            modelBuilder.Entity("RendicionGastos.Entities.Rendicion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("EliminadoBD")
                        .HasColumnType("bit");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("FechaRendicion")
                        .HasColumnType("date");

                    b.Property<string>("Glosa")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("MontoAsignado")
                        .HasColumnType("real");

                    b.Property<string>("UsuarioActualizacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("Rendicion");
                });

            modelBuilder.Entity("RendicionGastos.Entities.RendicionDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ConceptoId")
                        .HasColumnType("int");

                    b.Property<bool>("EliminadoBD")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("datetime2");

                    b.Property<DateOnly>("FechaDocumento")
                        .HasColumnType("date");

                    b.Property<string>("GlosaDetalle")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<string>("NumeroDocumento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Proveedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RendicionId")
                        .HasColumnType("int");

                    b.Property<int>("TipoDoc")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioActualizacion")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UsuarioCreacion")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("ConceptoId");

                    b.HasIndex("RendicionId");

                    b.ToTable("RendicionDetalle");
                });

            modelBuilder.Entity("RendicionGastos.Entities.Rendicion", b =>
                {
                    b.HasOne("RendicionGastos.Entities.Empleado", "Empleado")
                        .WithMany("Rendicion")
                        .HasForeignKey("EmpleadoId")
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("RendicionGastos.Entities.RendicionDetalle", b =>
                {
                    b.HasOne("RendicionGastos.Entities.Concepto", "Concepto")
                        .WithMany()
                        .HasForeignKey("ConceptoId")
                        .IsRequired();

                    b.HasOne("RendicionGastos.Entities.Rendicion", "Rendicion")
                        .WithMany("DetalleRendicion")
                        .HasForeignKey("RendicionId")
                        .IsRequired();

                    b.Navigation("Concepto");

                    b.Navigation("Rendicion");
                });

            modelBuilder.Entity("RendicionGastos.Entities.Empleado", b =>
                {
                    b.Navigation("Rendicion");
                });

            modelBuilder.Entity("RendicionGastos.Entities.Rendicion", b =>
                {
                    b.Navigation("DetalleRendicion");
                });
#pragma warning restore 612, 618
        }
    }
}
